{"version":3,"sources":["../../../../src/db/graphql/resolvers/newsletterSignUp.js"],"names":["executeNewsletterSignUp","url","email","firstName","lastName","organization","unformattedDate","Date","setHours","getHours","date","toISOString","verifyUrl","encodeURIComponent","mail","from","to","subject","content","type","returnResponse","sendMail","err","console","log","message","response","status","body","headers","newsletterSignUp","_","args","context"],"mappings":";;;;;;;;;;AAAA;;;;AAEA,MAAMA;AAAA,6CAA0B,WAAO,EAAEC,GAAF,EAAOC,KAAP,EAAcC,SAAd,EAAyBC,QAAzB,EAAmCC,YAAnC,KAAoD,EAAEA,cAAc,EAAhB,EAA3D,EAAoF;AAClH,UAAMC,kBAAkB,IAAIC,IAAJ,EAAxB;AACAD,oBAAgBE,QAAhB,CAAyBF,gBAAgBG,QAAhB,KAA2B,CAApD;AACA,UAAMC,OAAOJ,gBAAgBK,WAAhB,EAAb;AACA,UAAMC,YAAYX,MAAO,0BAAyBY,mBAAmBX,KAAnB,CAA0B,cAAaW,mBAAmBV,SAAnB,CAA8B,aAAYU,mBAAmBT,QAAnB,CAA6B,eAAcS,mBAAmBH,IAAnB,CAAyB,iBAAgBG,mBAAmBR,YAAnB,CAAiC,EAAxP;AACA,UAAMS,OAAO;AACXC,YAAM,oBADK;AAEXC,UAAId,KAFO;AAGXe,eAAS,mCAHE;AAIXC,eAAU,wBAAuBN,SAAU,kIAJhC;AAKXO,YAAM;AALK,KAAb;AAOA,UAAMC,iBAAiB,qHAAvB;AACA,QAAI;AACF,aAAO,MAAM,wBAAWC,QAAX,CAAoBD,cAApB,EAAoCN,IAApC,CAAb;AACD,KAFD,CAEE,OAAMQ,GAAN,EAAW;AACXC,cAAQC,GAAR,CAAYF,IAAIG,OAAhB,EAAyBH,IAAII,QAAJ,CAAaC,MAAtC,EAA8CL,IAAII,QAAJ,CAAaE,IAA3D,EAAiEN,IAAII,QAAJ,CAAaG,OAA9E;AACA,aAAO,EAAEP,KAAK,IAAP,EAAaI,UAAUJ,IAAIG,OAA3B,EAAP;AACD;AACF,GAnBK;;AAAA;AAAA;AAAA;AAAA,IAAN;;AAqBA,MAAMK,mBAAmB,CAACC,CAAD,EAAIC,IAAJ,EAAUC,OAAV,KAAsB;AAC7CV,UAAQC,GAAR,CAAY,kBAAZ;AACA,SAAOxB,wBAAwBgC,IAAxB,CAAP;AACD,CAHD;;kBAKeF,gB","file":"newsletterSignUp.js","sourcesContent":["import { mailClient, emailDefaults } from '../../../lib/mail_client'\n\nconst executeNewsletterSignUp = async ({ url, email, firstName, lastName, organization } = { organization: '' }) => {\n  const unformattedDate = new Date()\n  unformattedDate.setHours(unformattedDate.getHours()+1)\n  const date = unformattedDate.toISOString()\n  const verifyUrl = url + `?newsletter=true&email=${encodeURIComponent(email)}&firstName=${encodeURIComponent(firstName)}&lastName=${encodeURIComponent(lastName)}&expiryTime=${encodeURIComponent(date)}&organization=${encodeURIComponent(organization)}`\n  const mail = {\n    from: 'content@pibrain.io',\n    to: email,\n    subject: 'Confirm piBrain Newsletter Signup',\n    content: `Please click <a href=${verifyUrl}>here</a> to confirm your newsletter subscription. <br />If you did not sign-up for this please contact us at support@pibrain.io`,\n    type: 'newsLetterSignupConfirmation',\n  }\n  const returnResponse = 'Success! Please check your e-mail to confirm your subscription to the piBrain newsletter, it will expire in 1 hour.'\n  try {\n    return await mailClient.sendMail(returnResponse, mail)\n  } catch(err) {\n    console.log(err.message, err.response.status, err.response.body, err.response.headers)\n    return { err: true, response: err.message }\n  }\n}\n\nconst newsletterSignUp = (_, args, context) => {\n  console.log('newsLetterSignUp')\n  return executeNewsletterSignUp(args)\n}\n\nexport default newsletterSignUp\n"]}