{"version":3,"sources":["../../../../src/db/graphql/resolvers/verifyUserEmail.js"],"names":["executeVerifyUserEmail","nonce","url","user","User","findOne","where","activationNonce","err","response","message","resendUrl","noUser","active","Date","activationExpiry","set","save","process","env","PB_DOMAIN","verifyUserEmail","_","args","context","console","log"],"mappings":";;;;;;;;;;AAAA;;;;;;AAEA,MAAMA;AAAA,6CAAyB,WAAO,EAAEC,KAAF,EAASC,GAAT,EAAP,EAA0B;AACvD,QAAI;AACF,UAAIC,OAAO,MAAM,wBAAGC,IAAH,CAAQC,OAAR,CACf,EAAEC,OAAO,EAAEC,iBAAiBN,KAAnB,EAAT,EADe,CAAjB;AAGD,KAJD,CAIE,OAAMO,GAAN,EAAW;AAAE,aAAO,EAAEA,KAAK,IAAP,EAAaC,UAAUD,IAAIE,OAA3B,EAAP;AAA6C;AAC5D,QAAIC,YAAa,GAAET,GAAI,WAAUD,KAAM,8BAAvC;AACA,QAAG,CAACE,IAAJ,EAAU;AAAE,aAAO,EAAEK,KAAK,KAAP,EAAcC,UAAU,+BAAxB,EAAyDG,QAAQ,IAAjE,EAAP;AAAgF;AAC5F,QAAGT,KAAKU,MAAR,EAAgB;AAAE,aAAO,EAAEL,KAAK,KAAP,EAAcC,UAAU,sEAAxB,EAAgGG,QAAQ,KAAxG,EAAP;AAAwH;AAC1I,QAAI,IAAIE,IAAJ,EAAD,GAAgB,IAAIA,IAAJ,CAASX,KAAKY,gBAAd,CAAnB,EAAqD;AACnD,aAAO,EAAEP,KAAK,KAAP,EAAcC,UAAW,8CAA6CE,SAAU,sBAAhF,EAAuGC,QAAQ,KAA/G,EAAP;AACD;AACDT,SAAKa,GAAL,CAAS,QAAT,EAAmB,IAAnB;AACA,QAAI;AAAE,YAAMb,KAAKc,IAAL,EAAN;AAAmB,KAAzB,CACA,OAAMT,GAAN,EAAW;AAAE,aAAO,EAAEA,KAAK,IAAP,EAAaC,UAAUD,IAAIE,OAA3B,EAAP;AAA6C;AAC1D,WAAO,EAAEF,KAAK,KAAP,EAAcC,UAAW,qDAAoDS,QAAQC,GAAR,CAAYC,SAAU,qBAAnG,EAAP;AACD,GAhBK;;AAAA;AAAA;AAAA;AAAA,IAAN;;AAkBA,MAAMC,kBAAkB,CAACC,CAAD,EAAIC,IAAJ,EAAUC,OAAV,KAAsB;AAC5CC,UAAQC,GAAR,CAAY,iBAAZ;AACA,SAAO1B,uBAAuBuB,IAAvB,CAAP;AACD,CAHD;;kBAKeF,e","file":"verifyUserEmail.js","sourcesContent":["import db from '../../sequelize/models/db_connection'\n\nconst executeVerifyUserEmail = async ({ nonce, url }) => {\n  try {\n    var user = await db.User.findOne(\n      { where: { activationNonce: nonce } },\n    )\n  } catch(err) { return { err: true, response: err.message } }\n  let resendUrl = `${url}?verify=${nonce}&resend=true&type=userSignUp`\n  if(!user) { return { err: false, response: 'Whoops, something went wrong.', noUser: true } }\n  if(user.active) { return { err: false, response: \"User already verified. Click <a href='pibrain.io'>here</a> to login.\", noUser: false } }\n  if((new Date()) > (new Date(user.activationExpiry))) {\n    return { err: false, response: `Sorry, the link has expired. Click <a href=${resendUrl}>here</a> to resend.`, noUser: false }\n  }\n  user.set('active', true)\n  try { await user.save() }\n  catch(err) { return { err: true, response: err.message } }\n  return { err: false, response: `Thank you for verifying your email! Click <a href=${process.env.PB_DOMAIN}>here</a> to login.` }\n}\n\nconst verifyUserEmail = (_, args, context) => {\n  console.log('verifyUserEmail')\n  return executeVerifyUserEmail(args)\n}\n\nexport default verifyUserEmail\n"]}