{"version":3,"sources":["../../../../src/db/graphql/resolvers/promoteMemberToAdmin.js"],"names":["executePromoteMemberToAdmin","nonce","targetUser","teamName","session","Session","findOne","where","err","response","data","user","User","email","teams","getTeams","team","filter","name","active","userTeam","UserTeam","firstName","get","set","save","console","error","message","promoteMemberToAdmin","_","args","context","log"],"mappings":";;;;;;;;;;AAAA;;;;;;AAEA,MAAMA;AAAA,6CAA8B,WAAO,EAAEC,KAAF,EAASC,UAAT,EAAqBC,QAArB,EAAP,EAA2C;AAC7E,QAAI;AACF,YAAMC,UAAW,MAAM,wBAAGC,OAAH,CAAWC,OAAX,CAAmB,EAAEC,OAAO,EAAEN,KAAF,EAAT,EAAnB,CAAvB;AACA,UAAG,CAACG,OAAJ,EAAa;AAAE,eAAO,EAAEI,KAAK,IAAP,EAAaC,UAAU,+BAAvB,EAAwDC,MAAM,EAA9D,EAAP;AAA2E;AAC1F,YAAMC,OAAO,MAAM,wBAAGC,IAAH,CAAQN,OAAR,CAAgB,EAAEC,OAAO,EAAEM,OAAOX,UAAT,EAAT,EAAhB,CAAnB;AACA,UAAG,CAACS,IAAJ,EAAU;AAAE,eAAO,EAAEH,KAAK,IAAP,EAAaC,UAAU,+BAAvB,EAAwDC,MAAM,EAA9D,EAAP;AAA2E;AACvF,YAAMI,QAAQ,MAAMH,KAAKI,QAAL,EAApB;AACA,YAAMC,OAAOF,MAAMG,MAAN,CAAa,UAACD,IAAD;AAAA,eAAWA,KAAKE,IAAL,IAAaf,QAAxB;AAAA,OAAb,EAAgD,CAAhD,CAAb;AACA,UAAI,CAACa,KAAKG,MAAV,EAAmB;AAAE,eAAO,EAAEX,KAAK,IAAP,EAAaC,UAAU,kBAAvB,EAAP;AAAoD;AACzE,YAAMW,WAAWJ,KAAKK,QAAtB;AACA,UAAG,CAACD,SAASD,MAAb,EAAqB;AAAE,eAAO,EAAEX,KAAK,IAAP,EAAaC,UAAW,GAAEE,KAAKW,SAAU,qCAAzC,EAAP;AAAwF;AAC/G,UAAGF,SAASG,GAAT,CAAa,MAAb,KAAwB,OAAxB,IAAmCH,SAASG,GAAT,CAAa,MAAb,KAAwB,OAA9D,EAAuE;AAAE,eAAO,EAAEf,KAAK,IAAP,EAAaC,UAAW,GAAEE,KAAKW,SAAU,gCAAzC,EAAP;AAAkF;AAC3JF,eAASI,GAAT,CAAa,MAAb,EAAqB,OAArB;AACA,YAAMJ,SAASK,IAAT,EAAN;AACA,aAAO,EAAEjB,KAAK,KAAP,EAAcC,UAAU,UAAxB,EAAP;AACD,KAdD,CAcE,OAAMD,GAAN,EAAW;AACXkB,cAAQC,KAAR,CAAcnB,GAAd;AACA,aAAO,EAAEA,KAAK,IAAP,EAAaC,UAAUD,IAAIoB,OAA3B,EAAoClB,MAAM,EAA1C,EAAP;AACD;AACF,GAnBK;;AAAA;AAAA;AAAA;AAAA,IAAN;;AAqBA,MAAMmB,uBAAuB,CAACC,CAAD,EAAIC,IAAJ,EAAUC,OAAV,KAAsB;AACjDN,UAAQO,GAAR,CAAY,sBAAZ;AACA,SAAOjC,4BAA4B+B,IAA5B,CAAP;AACD,CAHD;;kBAKeF,oB","file":"promoteMemberToAdmin.js","sourcesContent":["import db from '../../sequelize/models/db_connection'\n\nconst executePromoteMemberToAdmin = async ({ nonce, targetUser, teamName }) => {\n  try {\n    const session =  await db.Session.findOne({ where: { nonce } })\n    if(!session) { return { err: true, response: 'Whoops! Something went wrong.', data: {} } }\n    const user = await db.User.findOne({ where: { email: targetUser } })\n    if(!user) { return { err: true, response: 'Whoops! Something went wrong.', data: {} } }\n    const teams = await user.getTeams()\n    const team = teams.filter((team) => (team.name == teamName))[0]\n    if( !team.active ) { return { err: true, response: 'Team not active!' } }\n    const userTeam = team.UserTeam\n    if(!userTeam.active) { return { err: true, response: `${user.firstName} has not accepted their invite yet!` } }\n    if(userTeam.get('type') == 'ADMIN' || userTeam.get('type') == 'OWNER') { return { err: true, response: `${user.firstName} is already an admin or owner!`} }\n    userTeam.set('type', 'ADMIN')\n    await userTeam.save()\n    return { err: false, response: 'Success!' }\n  } catch(err) {\n    console.error(err)\n    return { err: true, response: err.message, data: {} }\n  }\n}\n\nconst promoteMemberToAdmin = (_, args, context) => {\n  console.log('promoteMemberToAdmin')\n  return executePromoteMemberToAdmin(args)\n}\n\nexport default promoteMemberToAdmin\n"]}